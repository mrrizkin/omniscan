{
    "swagger": "2.0",
    "info": {
        "description": "OmniScan API provides a comprehensive set of endpoints for scanning and analyzing e-statement data.",
        "title": "OmniScan API",
        "termsOfService": "https://dak.id/terms/",
        "contact": {
            "name": "API Support Team",
            "url": "https://dak.id/support",
            "email": "support@dak.id"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/e-statement": {
            "get": {
                "description": "Retrieve a list of all e-statements with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "E-Statements"
                ],
                "summary": "Get all e-statements",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved e-statements",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.EStatement"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/definitions/types.PaginationMeta"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            }
        },
        "/e-statement/scan": {
            "post": {
                "description": "Scan an e-statement and return the result",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "E-Statements"
                ],
                "summary": "Scan an e-statement",
                "parameters": [
                    {
                        "type": "file",
                        "description": "PDF file to scan",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully scanned e-statement",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/estatement.ScanEStatementResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            }
        },
        "/e-statement/{id}/summary": {
            "get": {
                "description": "Get an e-statement summary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "E-Statements"
                ],
                "summary": "Get an e-statement summary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "E-Statement ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved e-statement summary",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/estatement.OverallSummary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Retrieve a list of all users with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved users",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.User"
                                            }
                                        },
                                        "meta": {
                                            "$ref": "#/definitions/types.PaginationMeta"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Retrieve a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's information by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated user",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted user",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/validator.GlobalErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "estatement.MonthlyAmount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "estatement.MonthlyEStatementDetails": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "e_statement_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EStatementDetail"
                    }
                }
            }
        },
        "estatement.MonthlySummary": {
            "type": "object",
            "properties": {
                "average_balance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "average_credit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "average_debit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "end_balance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "frequency_credit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "frequency_debit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "start_balance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "top_credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyEStatementDetails"
                    }
                },
                "top_debits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyEStatementDetails"
                    }
                },
                "total_expense": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                },
                "total_income": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/estatement.MonthlyAmount"
                    }
                }
            }
        },
        "estatement.OverallSummary": {
            "type": "object",
            "properties": {
                "all_time": {
                    "$ref": "#/definitions/estatement.Summary"
                },
                "monthly": {
                    "$ref": "#/definitions/estatement.MonthlySummary"
                }
            }
        },
        "estatement.ScanEStatementResponse": {
            "type": "object",
            "properties": {
                "e_statement_id": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/types.ScanInfo"
                },
                "meta": {
                    "$ref": "#/definitions/pdfextract.Metadata"
                },
                "summary": {
                    "$ref": "#/definitions/estatement.OverallSummary"
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Transaction"
                    }
                }
            }
        },
        "estatement.Summary": {
            "type": "object",
            "properties": {
                "anomaly_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EStatementDetail"
                    }
                },
                "average_balance": {
                    "type": "number"
                },
                "average_credit": {
                    "type": "number"
                },
                "average_debit": {
                    "type": "number"
                },
                "end_balance": {
                    "type": "number"
                },
                "frequency_credit": {
                    "type": "number"
                },
                "frequency_debit": {
                    "type": "number"
                },
                "start_balance": {
                    "type": "number"
                },
                "top_credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EStatementDetail"
                    }
                },
                "top_debits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EStatementDetail"
                    }
                },
                "total_bank_fee": {
                    "type": "number"
                },
                "total_cash_withdrawal": {
                    "type": "number"
                },
                "total_digital_revenue": {
                    "type": "number"
                },
                "total_expense": {
                    "type": "number"
                },
                "total_income": {
                    "type": "number"
                },
                "total_interest": {
                    "type": "number"
                },
                "total_tax": {
                    "type": "number"
                },
                "total_transfer_in": {
                    "type": "number"
                },
                "total_transfer_out": {
                    "type": "number"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.Attachment": {
            "type": "object",
            "properties": {
                "desc": {
                    "description": "description",
                    "type": "string"
                },
                "fileName": {
                    "description": "filename",
                    "type": "string"
                },
                "id": {
                    "description": "id",
                    "type": "string"
                },
                "io.Reader": {},
                "modTime": {
                    "description": "time of last modification (optional)",
                    "type": "string"
                }
            }
        },
        "model.Box": {
            "type": "object",
            "properties": {
                "rect": {
                    "description": "Rectangle in user space.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.Rectangle"
                        }
                    ]
                }
            }
        },
        "model.PageBoundaries": {
            "type": "object",
            "properties": {
                "artBox": {
                    "$ref": "#/definitions/model.Box"
                },
                "bleedBox": {
                    "$ref": "#/definitions/model.Box"
                },
                "cropBox": {
                    "$ref": "#/definitions/model.Box"
                },
                "mediaBox": {
                    "$ref": "#/definitions/model.Box"
                },
                "orient": {
                    "type": "string"
                },
                "rot": {
                    "description": "The effective page rotation.",
                    "type": "integer"
                },
                "trimBox": {
                    "$ref": "#/definitions/model.Box"
                }
            }
        },
        "model.ViewerPreferences": {
            "type": "object",
            "properties": {
                "centerWindow": {
                    "type": "boolean"
                },
                "direction": {
                    "description": "since 1.3",
                    "type": "integer"
                },
                "displayDocTitle": {
                    "description": "since 1.4",
                    "type": "boolean"
                },
                "duplex": {
                    "description": "since 1.7",
                    "type": "integer"
                },
                "enforce": {
                    "description": "since 2.0",
                    "type": "array",
                    "items": {}
                },
                "fitWindow": {
                    "type": "boolean"
                },
                "hideMenubar": {
                    "type": "boolean"
                },
                "hideToolbar": {
                    "type": "boolean"
                },
                "hideWindowUI": {
                    "type": "boolean"
                },
                "nonFullScreenPageMode": {
                    "type": "integer"
                },
                "numCopies": {
                    "description": "since 1.7",
                    "type": "integer"
                },
                "pickTrayByPDFSize": {
                    "description": "since 1.7",
                    "type": "boolean"
                },
                "printArea": {
                    "description": "since 1.4 to 1.7",
                    "type": "integer"
                },
                "printClip": {
                    "description": "since 1.4 to 1.7",
                    "type": "integer"
                },
                "printPageRange": {
                    "description": "since 1.7",
                    "type": "array",
                    "items": {}
                },
                "printScaling": {
                    "description": "since 1.6",
                    "type": "integer"
                },
                "viewArea": {
                    "description": "since 1.4 to 1.7",
                    "type": "integer"
                },
                "viewClip": {
                    "description": "since 1.4 to 1.7",
                    "type": "integer"
                }
            }
        },
        "models.EStatement": {
            "type": "object",
            "properties": {
                "bank": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "e_statement_detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EStatementDetail"
                    }
                },
                "expired": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "periode": {
                    "type": "string"
                },
                "produk": {
                    "type": "string"
                },
                "rekening": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.EStatementDetail": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "branch": {
                    "type": "string"
                },
                "change": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description1": {
                    "type": "string"
                },
                "description2": {
                    "type": "string"
                },
                "e_statement": {
                    "$ref": "#/definitions/models.EStatement"
                },
                "e_statement_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "transaction_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Permission": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "role_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RolePermission"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.RolePermission": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "permission": {
                    "$ref": "#/definitions/models.Permission"
                },
                "permission_id": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "pdfextract.Metadata": {
            "type": "object",
            "properties": {
                "appendOnly": {
                    "type": "boolean"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Attachment"
                    }
                },
                "author": {
                    "type": "string"
                },
                "bookmarks": {
                    "type": "boolean"
                },
                "creationDate": {
                    "type": "string"
                },
                "creator": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "form": {
                    "type": "boolean"
                },
                "hybrid": {
                    "type": "boolean"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "linearized": {
                    "type": "boolean"
                },
                "modificationDate": {
                    "type": "string"
                },
                "names": {
                    "type": "boolean"
                },
                "pageBoundaries": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.PageBoundaries"
                    }
                },
                "pageCount": {
                    "type": "integer"
                },
                "pageLayout": {
                    "type": "string"
                },
                "pageMode": {
                    "type": "string"
                },
                "pageSizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Dim"
                    }
                },
                "permissions": {
                    "type": "integer"
                },
                "producer": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "signatures": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "tagged": {
                    "type": "boolean"
                },
                "thumbnails": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "usingObjectStreams": {
                    "type": "boolean"
                },
                "usingXRefStreams": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "viewerPreferences": {
                    "$ref": "#/definitions/model.ViewerPreferences"
                },
                "watermarked": {
                    "type": "boolean"
                },
                "xmlmetadata": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "types.Dim": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "number"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "types.PaginationMeta": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_count": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Point": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "types.Rectangle": {
            "type": "object",
            "properties": {
                "ll": {
                    "$ref": "#/definitions/types.Point"
                },
                "ur": {
                    "$ref": "#/definitions/types.Point"
                }
            }
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "debug": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/types.PaginationMeta"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "types.ScanInfo": {
            "type": "object",
            "properties": {
                "bank": {
                    "type": "string"
                },
                "periode": {
                    "type": "string"
                },
                "produk": {
                    "type": "string"
                },
                "rekening": {
                    "type": "string"
                }
            }
        },
        "types.Transaction": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "branch": {
                    "type": "string"
                },
                "change": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "description1": {
                    "type": "string"
                },
                "description2": {
                    "type": "string"
                },
                "transaction_type": {
                    "type": "string"
                }
            }
        },
        "validator.GlobalErrorResponse": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI Specification",
        "url": "https://swagger.io/specification/"
    }
}